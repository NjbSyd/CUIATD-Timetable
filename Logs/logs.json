{
  "Normal": {
    "2024-09-28": [
      "1:39:53 AM: Server Started on port 3000",
      "1:40:18 AM: Server Started on port 3000",
      "1:40:32 AM: Server Started on port 3000",
      "1:40:52 AM: Server Started on port 3000",
      "3:13:42 AM: Server Started on port 3000",
      "3:14:13 AM: Server Started on port 3000",
      "3:14:25 AM: Server Started on port 3000",
      "3:15:36 AM: Server Started on port 3000",
      "3:15:40 AM: Server Started on port 3000",
      "3:16:51 AM: Server Started on port 3000",
      "3:18:29 AM: Server Started on port 3000",
      "3:18:35 AM: Server Started on port 3000",
      "3:18:41 AM: Server Started on port 3000",
      "3:18:48 AM: Server Started on port 3000",
      "3:19:10 AM: Server Started on port 3000",
      "3:27:16 AM: Server Started on port 3000",
      "3:27:24 AM: Server Started on port 3000",
      "3:32:52 AM: Server Started on port 3000",
      "3:33:13 AM: Server Started on port 3000",
      "3:33:26 AM: Server Started on port 3000",
      "3:33:44 AM: Server Started on port 3000",
      "3:34:38 AM: Server Started on port 3000",
      "3:34:41 AM: Server Started on port 3000",
      "3:35:01 AM: Server Started on port 3000",
      "3:36:08 AM: Server Started on port 3000",
      "3:36:25 AM: Server Started on port 3000",
      "3:37:27 AM: Server Started on port 3000",
      "3:37:58 AM: Server Started on port 3000",
      "3:38:12 AM: Server Started on port 3000",
      "3:43:07 AM: Server Started on port 3000",
      "3:43:13 AM: Server Started on port 3000",
      "3:44:36 AM: Server Started on port 3000",
      "3:44:51 AM: Server Started on port 3000",
      "3:44:54 AM: Server Started on port 3000",
      "3:45:01 AM: Server Started on port 3000",
      "3:45:06 AM: Server Started on port 3000",
      "3:50:30 AM: Server Started on port 3000",
      "3:50:44 AM: Server Started on port 3000",
      "3:50:51 AM: Server Started on port 3000",
      "3:51:11 AM: Server Started on port 3000",
      "3:51:17 AM: Server Started on port 3000",
      "3:51:32 AM: Server Started on port 3000",
      "3:58:19 AM: Server Started on port 3000",
      "4:03:51 AM: Server Started on port 3000",
      "4:03:52 AM: Server Started on port 3000",
      "4:04:04 AM: Server Started on port 3000"
    ]
  },
  "Failure": {
    "2024-09-28": [
      "3:17:18 AM: \nInvalid `prisma.timetable.create()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:38:30\n\n  35     return { class_name: schedule.class_name, status: \"Non Updated\" };\n  36   }\n  37 } else {\n→ 38   await prisma.timetable.create({\n         data: {\n           class_name: \"BBA 11A\",\n           day: \"Monday\",\n           time_slot: \"09:40 to 11:10\",\n           subject: \"Cost and Management Accounting\",\n           class_room: \"Z114(M)\",\n           teacher: \"Zafar Iqbal\",\n           extra: null,\n           __v: 0,\n           ~~~\n       ?   version?: Float\n         }\n       })\n\nUnknown argument `__v`. Did you mean `day`? Available options are marked with ?.",
      "3:20:17 AM: \nInvalid `prisma.timetable.create()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:42:30\n\n  39   }\n  40 } else {\n  41   console.log(\"New Schedule Added\");\n→ 42   await prisma.timetable.create({\n         data: {\n           class_name: \"BBA 11A\",\n           day: \"Monday\",\n           time_slot: \"09:40 to 11:10\",\n           subject: \"Cost and Management Accounting\",\n           class_room: \"Z114(M)\",\n           teacher: \"Zafar Iqbal\",\n           extra: null,\n           __v: 0,\n           ~~~\n       ?   version?: Float\n         }\n       })\n\nUnknown argument `__v`. Did you mean `day`? Available options are marked with ?.",
      "3:28:12 AM: \nInvalid `prisma.timetable.create()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:42:30\n\n  39   }\n  40 } else {\n  41   console.log(\"New Schedule Added\");\n→ 42   await prisma.timetable.create({\n         data: {\n           class_name: \"BBA 1A\",\n           day: \"Monday\",\n           time_slot: \"08:00 to 09:30\",\n           subject: \"Applications of Information and Communication Technologies\",\n           class_room: \"Computer LAB 4\",\n           teacher: \"Dr. Muhammad Shoaib Khaliq\",\n           extra: null,\n           __v: 0,\n           ~~~\n       ?   version?: Float\n         }\n       })\n\nUnknown argument `__v`. Did you mean `day`? Available options are marked with ?.",
      "3:30:10 AM: \nInvalid `prisma.timetable.create()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:42:30\n\n  39   }\n  40 } else {\n  41   console.log(\"New Schedule Added\");\n→ 42   await prisma.timetable.create({\n         data: {\n           class_name: \"BBA 11A\",\n           day: \"Monday\",\n           time_slot: \"09:40 to 11:10\",\n           subject: \"Cost and Management Accounting\",\n           class_room: \"Z114(M)\",\n           teacher: \"Zafar Iqbal\",\n           extra: null,\n           __v: 0,\n           ~~~\n       ?   version?: Float\n         }\n       })\n\nUnknown argument `__v`. Did you mean `day`? Available options are marked with ?.",
      "3:46:49 AM: \nInvalid `prisma.timetable.findFirst()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:5:52\n\n  2 \n  3 const AddSchedule = async (schedule) => {\n  4   try {\n→ 5     const existingDocInDb = await prisma.timetable.findFirst(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17)",
      "3:53:21 AM: \nInvalid `prisma.timetable.findFirst()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:5:52\n\n  2 \n  3 const AddSchedule = async (schedule) => {\n  4   try {\n→ 5     const existingDocInDb = await prisma.timetable.findFirst(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17)",
      "4:00:22 AM: \nInvalid `prisma.timetable.findFirst()` invocation in\n/Users/swipetech/Documents/GitHub/CUI-ATD-Companion-Scrapper/prisma/src/StoreDataInMongoDB.js:5:52\n\n  2 \n  3 const AddSchedule = async (schedule) => {\n  4   try {\n→ 5     const existingDocInDb = await prisma.timetable.findFirst(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17)"
    ]
  },
  "Request": {
    "2024-09-28": [
      "3:22:30 AM: Timetable Requested from Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36",
      "4:07:05 AM: Timetable Requested from Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36",
      "4:07:14 AM: Free Slots Requested from Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36",
      "4:07:27 AM: Timetable Requested from Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36",
      "4:09:52 AM: Timetable Requested from okhttp/4.9.2",
      "4:10:03 AM: Timetable Requested from okhttp/4.9.2",
      "4:12:21 AM: Timetable Requested from okhttp/4.9.2",
      "4:15:46 AM: Timetable Requested from okhttp/4.9.2",
      "4:17:43 AM: Timetable Requested from okhttp/4.9.2",
      "4:20:03 AM: Timetable Requested from okhttp/4.9.2",
      "4:20:27 AM: Free Slots Requested from okhttp/4.9.2",
      "4:26:59 AM: Timetable Requested from okhttp/4.9.2",
      "4:32:53 AM: Timetable Requested from okhttp/4.9.2",
      "4:33:25 AM: Timetable Requested from okhttp/4.9.2",
      "4:34:18 AM: Should Update Requested from okhttp/4.9.2",
      "4:34:41 AM: Should Update Requested from okhttp/4.9.2",
      "4:35:08 AM: Should Update Requested from okhttp/4.9.2",
      "4:35:21 AM: Should Update Requested from okhttp/4.9.2",
      "4:36:19 AM: Should Update Requested from okhttp/4.9.2",
      "4:45:33 AM: Should Update Requested from okhttp/4.9.2",
      "4:49:11 AM: Should Update Requested from okhttp/4.9.2"
    ],
    "2024-09-29": [
      "5:09:44 AM: Should Update Requested from okhttp/4.9.2",
      "5:10:25 AM: Should Update Requested from okhttp/4.9.2"
    ]
  },
  "Success": {
    "2024-09-28": [
      "3:39:11 AM: Scrapping completed Successfully! Updated: 0, New: 85, Existing: 0, Deleted: 0",
      "3:44:27 AM: Scrapping completed Successfully! Updated: 0, New: 218, Existing: 0, Deleted: 0",
      "4:06:12 AM: Scraping completed Successfully! Updated: 0, New: 2273, Existing: 416, Deleted: 0"
    ]
  }
}